#ifndef __WIRING_PI_PIN_TABLES_H
#define __WIRING_PI_PIN_TABLES_H

#include "wiringPiIncludes.H"
#include "wiringPiDefines.H"

namespace WiringPi
{
    consteval const std::array<pin_t, 64> pinToGpioI(const int layout)
    {
        if (layout == 1) // A, B, Rev 1, 1.1
        {
            return std::array<pin_t, 64>{
                17, 18, 21, 22, 23, 24, 25, 4,  //
                0, 1, 8, 7, 10, 9, 11, 14,      //
                15, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1};
        }
        else // A2, B2, A+, B+, CM, Pi2, Pi3, Zero, Zero W, Zero 2 W
        {
            return std::array<pin_t, 64>{
                17, 18, 27, 22, 23, 24, 25, 4,  //
                2, 3, 8, 7, 10, 9, 11, 14,      //
                15, 28, 29, 30, 31, 5, 6, 13,   //
                19, 26, 12, 16, 20, 21, 0, 1,   //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1};
        }
    }

    consteval const std::array<pin_t, 64> physToGpioI(const int layout)
    {
        if (layout == 1) // A, B, Rev 1, 1.1
        {
            return std::array<pin_t, 64>{
                -1, -1, -1, 0, -1, 1, -1, 4,    //
                14, -1, 15, 17, 18, 21, -1, 22, //
                23, -1, 24, 10, -1, 9, 25, 11,  //
                8, -1, 7, -1, -1, -1, -1, -1,   //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1};
        }
        else // A2, B2, A+, B+, CM, Pi2, Pi3, Zero, Zero W, Zero 2 W
        {
            return std::array<pin_t, 64>{
                -1, -1, -1, 2, -1, 3, -1, 4,    //
                14, -1, 15, 17, 18, 27, -1, 22, //
                23, -1, 24, 10, -1, 9, 25, 11,  //
                8, -1, 7, 0, 1, 5, -1, 6,       //
                12, 13, -1, 19, 16, 26, 20, -1, //
                21, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, 28, 29, 30, 31, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1};
        }
    }

    consteval const std::array<pin_t, 64> gpioToGPLEVI()
    {
        return std::array<pin_t, 64>{
            13, 13, 13, 13, 13, 13, 13, 13, //
            13, 13, 13, 13, 13, 13, 13, 13, //
            13, 13, 13, 13, 13, 13, 13, 13, //
            13, 13, 13, 13, 13, 13, 13, 13, //
            14, 14, 14, 14, 14, 14, 14, 14, //
            14, 14, 14, 14, 14, 14, 14, 14, //
            14, 14, 14, 14, 14, 14, 14, 14, //
            14, 14, 14, 14, 14, 14, 14, 14};
    }

    constexpr std::array<pin_t, 64> sysFdsI(const int mode)
    {
        if (mode == WPI_MODE_GPIO_SYS<int>())
        {
            char fName[128];
            std::array<pin_t, 64> arr = std::array<pin_t, 64>{
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1};
            for (size_t pin = 0; pin < 64; ++pin)
            {
                sprintf(fName, "/sys/class/gpio/gpio%d/value", pin);
                arr[pin] = open(fName, O_RDWR);
            }
            return arr;
        }
        else
        {
            return std::array<pin_t, 64>{
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1, //
                -1, -1, -1, -1, -1, -1, -1, -1};
        }
    }

    consteval const std::array<pin_t, 128> gpioCLRSETI()
    {
        return std::array<pin_t, 128>{
            10, 10, 10, 10, 10, 10, 10, 10, //
            10, 10, 10, 10, 10, 10, 10, 10, //
            10, 10, 10, 10, 10, 10, 10, 10, //
            10, 10, 10, 10, 10, 10, 10, 10, //
            11, 11, 11, 11, 11, 11, 11, 11, //
            11, 11, 11, 11, 11, 11, 11, 11, //
            11, 11, 11, 11, 11, 11, 11, 11, //
            11, 11, 11, 11, 11, 11, 11, 11, //
            7, 7, 7, 7, 7, 7, 7, 7,         //
            7, 7, 7, 7, 7, 7, 7, 7,         //
            7, 7, 7, 7, 7, 7, 7, 7,         //
            7, 7, 7, 7, 7, 7, 7, 7,         //
            8, 8, 8, 8, 8, 8, 8, 8,         //
            8, 8, 8, 8, 8, 8, 8, 8,         //
            8, 8, 8, 8, 8, 8, 8, 8,         //
            8, 8, 8, 8, 8, 8, 8, 8};
    }
}

#endif